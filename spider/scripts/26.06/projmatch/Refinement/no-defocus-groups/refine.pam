 ; <html><head><title>Controls serial reconstruction refinement</title></head><body><pre>
 ;
 ; SOURCE: spider/docs/techs/recon1/Procs/refine.spi
 ;         New                               ArDean Leith Nov 2000
 ;         Rewritten                         ArDean Leith Mar 2004
 ;         [] variables                      ArDean Leith Dec 2005
 ;         Ampenhance                        ArDean Leith May 2006
 ;         More stacks                       ArDean Leith Dec 2006
 ;         Small angles limits               ArDean Leith Oct 2010
 ;         pixsiz, resol headers,r2,...      ArDean Leith Aug 2012
 ;         For CTF corrected images          ArDean Leith Oct 2013
 ;         For gold standard reconstruction  ArDean Leith May 2014
 ;
 ; PURPOSE: Controls serial reconstruction refinement.  This is master procedure for
 ;          serial refinement over several iterations. Data may be in one or more groups.
 ;
 ; USAGE:   clean ; ./spider spi/dat @refine
 ;
 ; I/O Registers and files are set in: <a href="refine-settings.spi">refine-settings.spi</a>
 ;
 ; VARIABLE REGISTERS:
 ;   [pixsiz]                Pixel size
 ;   [r2]                    Radius of object
 ;   [alignsh]               Shift allowed is +- this value
 ;   [prj-radius]            Radius of object for projection
 ;   [iter1]                 Starting iteration
 ;   [iter-end]              Ending   iteration
 ;   [small-ang]           Small angle refinement flag (1 == true)
 ;
 ; INPUT FILES: ('***' denotes group here)
 ;   [vol_orig]              ../ref_vol                 Initial volume file   (one)
 ;   [sel_group_orig]        ../sel_group     Group selection file  (one)
 ;   [sel_parts_orig]        ../group***_selfile          Group particle selection files (one/group)
 ;   [unaligned_images_orig] ../group***_align   Unaligned image stacks         (one/group)
 ;
 ; PROCEDURES CALLED:
 ;    refine-settings        <a href="refine-settings.spi">     refine-settings.spi</a>
 ;    refine-show-r2         <a href="refine-show-r2.spi">      refine-show-r2.spi</a>
 ;    refine-setrefangles    <a href="refine-setrefangles.spi"> refine-setrefangles.spi</a>
 ;    pub-prjrefs            <a href="pub-prjrefs.spi">         pub-prjrefs.spi</a>
 ;    refine-loop            <a href="refine-loop.spi">         refine-loop.spi</a>
 ;    refine-smangloop       <a href="refine-smangloop.spi">    refine-smangloop.spi</a>
 ;    refine-bp              <a href="refine-bp.spi">           refine-bp.spi</a>
 ;    merge-fsc-filt         <a href="merge-fsc-filt.spi">      merge-fsc-filt.spi</a>
 ;    .. sphdecon            <a href="sphdecon.spi">            sphdecon.spi</a>
 ;    .. enhance (optional)  <a href="enhance.spi">             enhance.spi</a>
 ;
 ; --------------------------------- END BATCH HEADER --------------------------

 MD
   TR OFF                    ; Loop info turned off
 MD
   VB OFF                    ; File info turned off

 ; Input initial parameters & file names but not angular steps
 @refine_settings([pixsiz],[r2],[alignsh],[prj-radius],[iter1],[iter-end],[sphdecon],[small-ang],[qsub],[incore-yn],[gold-std],[bp-type],[nummps])

 MD
   SET MP                    ; Use only one or two processors if using master node!!
   [nummps]

 SYS
   echo "  Alignment shift:   {%I0%[alignsh]}   Alignment radius: {%I0%[r2]}"
 SYS
   echo "  Projection radius: {%I0%[prj-radius]}" ; echo

 SYS  ; Create output directories if not present
   mkdir -p [out_dir] [work_dir] [in_dir]

 ; Move group selection doc file to input dir.
 SYS
   mv ../sel_group.$DATEXT  [in_dir]/

 ; Move starting group files to input dir.
 SYS
   mv ../group*_*.$DATEXT [in_dir]/

 SD /     ITERATION     MASKED-RES    RESOLUTION
   [iter_resol]              ; Resolution doc file              (output)
 SD E
   [iter_resol]              ; Resolution doc file              (finished)

 UD N [num-grps]             ; Find number of groups
   [sel_group]               ; Group selection file      (input)

 IF ( [iter1] == 1 ) THEN
   ; Ensure that starting input files exist
   [iter] = 1

   DO [s] = 1,2
     ; Create subset volumes from initial model
     CP
       [vol_orig]          ; Starting initial model == reference volume
       [vol_s]             ; Starting subset reference volume
   ENDDO

   DO [grp] = 1,[num-grps]
     ; Must create odd and even particle selection lists for all groups
     DE
       [sel_parts]_s1        ; Odd  particle selection doc file    (removed)
     DE
       [sel_parts]_s2        ; Even particle selection doc file    (removed)

     DOC SPLIT
       [sel_parts]           ; Particle selection doc file         (input)
       [sel_parts]_s1        ; Odd  particle selection doc file    (output)
       [sel_parts]_s2        ; Even particle selection doc file    (output)

     IF ( [small-ang] == 1 ) THEN
       CP
         [in_dir]/group{***[grp]}_align
         [group_align]

       SYS    ; Split particle selection doc file
         awk 'NR<3||NR%2==1' [group_align].$DATEXT >  [group_align]_s1.$DATEXT
       SYS
         awk 'NR<3||NR%2==0' [group_align].$DATEXT  >  [group_align]_s2.$DATEXT
     ENDIF
   ENDDO
 ENDIF

 ; Show alignment and projection radii on center slice of reference volume
 [s] = 1
 !@refine-show-r2([r2],[alignsh],[prj-radius])
 !  final/vol_01_s1            ; Reference volume

 IF ( [small-ang] == 1 ) THEN
   ; List desired offset angles for reference projections in a doc file.
   @refine-setrefangles([iter],[small-ang],[ampenhance],[ang-step],[ang-limit],[num-angs])
 ENDIF

 SYS
   echo "  Dataset is splitted into {%I0%[num-grps]} groups, each divided into two halves for gold-standard refinement" ; echo

 DO [iter]=[iter1],[iter-end] ; Loop over all iterations ----------------------------------

   IF ( [small-ang] == 0 ) THEN
     ; List desired angles ('VO EA') for reference projections in a doc file.
     @refine-setrefangles([iter],[small-ang],[ampenhance],[ang-step],[ang-limit],[num-angs])

     [tmp-grps] = 1
     ; Create reference projection stacks ('PJ 3F') from both subset reference volumes.
     @refine-prjrefs([iter],[tmp-grps],[ang-step],[prj-radius],[qsub])

   ENDIF

   ; Process all groups serially one-by-one

   DO [grp] = 1,[num-grps]    ; Loop over all  groups  -----------------

      SYS
        echo ; echo -n " Iteration: {%I0%[iter]}  Refining group: {%I4%[grp]}   " ; date  '+ TIME: %x  %X' ; echo

      MY FL                   ; Flush results file

      IF ( [small-ang] == 0 ) THEN
        ; For regular angle alignment
        @refine-loop([ang-step],[ang-limit],[r2],[alignsh],[prj-radius],[iter],[grp],[pixsiz],[incore-yn],[bp-type],[iter-end])
      ELSE
        ; For small angle alignment around a determined position
        @refine-smangloop([ang-step],[r2],[alignsh],[prj-radius],[iter],[grp]],[pixsiz],[bp-type],[iter-end])
      ENDIF

      MY FL                   ; Flush results file

   ENDDO                      ; End of: Loop over all groups -------------------

   UD E                       ; Finished with incore doc file

   ; Merge ('AS S') the group volumes into two subset output volumes,
   ; find resolution ('FSC') by comparing FSC of the two subsets,
   ; filter ('FD C')  the combined volumes using FSC curve to limit resolution,
   ; merge ('AS S') the two subset output volumes into single overall output volume.

   @merge-fsc-filt([pixsiz],[iter],[ampenhance],[r2],[sphdecon],[gold-std],[qsub])

   SYS
     echo -n " Iteration: {%I0%[iter]} Finished  " ; date '+ TIME: %x  %X' ;
   SYS
     echo "-------------------------------------------------------------------------------"
   MY FL                   ; Flush results
 ENDDO                     ; End of loop over all iterations ----------------------------

 SYS
   echo " Generating output files..."
 ; Merge alignment doc files for the last iteration
 [iter] = [iter] + 1
 DO [grp] = 1,[num-grps]
   DOC MERGE
     [group_align]_s1
     [group_align]_s2
     [group_align]
     0 ; merge by key
 ENDDO

 DOC COMBINE
   [out_dir]/align_{**[iter]}_***
   1-[num-grps]
   [out_align]

 SYS ; insert 2nd header line
   sed -i '2 i\ ; PSI, THE, PHI, REF, EXP, ANG, SX, SY, NPROJ, DIFF, CCROT, ANG, SX, SY, MIR-CC' [out_align].$DATEXT


 SYS                          ; Echo current time
   echo -n " Refinement finished   " ; date '+ TIME: %x  %X' ; echo

 EN
 ; </pre></body></html>